<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode-80. 删除有序数组中的重复项 II</title>
      <link href="/undefined/4684.html"/>
      <url>/undefined/4684.html</url>
      
        <content type="html"><![CDATA[<h1 id="80-删除有序数组中的重复项-II"><a href="#80-删除有序数组中的重复项-II" class="headerlink" title="80. 删除有序数组中的重复项 II"></a>80. 删除有序数组中的重复项 II</h1><p>给你一个有序数组 <code>nums</code> ，请你**<a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95"> 原地</a>** 删除重复出现的元素，使得出现次数超过两次的元素<strong>只出现两次</strong> ，返回删除后数组的新长度。</p><p>不要使用额外的数组空间，你必须在 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地 </a>修改输入数组</strong> 并在使用 O(1) 额外空间的条件下完成。</p><p>这个题和前面两道题[1](<a href="https://gr4dyzhou.github.io/undefined/11422.html">leetcode-27. 移除元素 | Grady’s coding notes (gr4dyzhou.github.io)</a>)，[2](<a href="https://gr4dyzhou.github.io/undefined/51766.html">leetcode-26. 删除有序数组中的重复项 | Grady’s coding notes (gr4dyzhou.github.io)</a>)都属于双指针，总结出了个模板</p><h2 id="本题代码"><a href="#本题代码" class="headerlink" title="本题代码"></a>本题代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeDuplicates(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        int n=nums.size();</span><br><span class="line">        if(n&lt;3) return n;</span><br><span class="line">        int s=2,f=2;</span><br><span class="line">        while(f&lt;n)&#123;</span><br><span class="line">            if(nums[f]-nums[s-2])&#123;</span><br><span class="line">                nums[s]=nums[f];</span><br><span class="line">                s++;</span><br><span class="line">            &#125;</span><br><span class="line">            f++;</span><br><span class="line">        &#125;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>元素出现次数等于<strong>s，f的初始位置</strong>。</p><h2 id="重复项-Ⅰ"><a href="#重复项-Ⅰ" class="headerlink" title="重复项-Ⅰ"></a>重复项-Ⅰ</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeDuplicates(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        int n=nums.size();</span><br><span class="line">        if(n&lt;2) return n;</span><br><span class="line">        int s=1,f=1;</span><br><span class="line">        while(f&lt;n)&#123;</span><br><span class="line">            if(nums[f]-nums[s-1])&#123;</span><br><span class="line">                nums[s]=nums[f];</span><br><span class="line">                s++;</span><br><span class="line">            &#125;</span><br><span class="line">            f++;</span><br><span class="line">        &#125;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>初始化s&#x3D;f&#x3D;1.</p><h2 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeElement(vector&lt;int&gt;&amp; nums, int val) &#123;</span><br><span class="line">        int n = nums.size();</span><br><span class="line">        int s = 0;</span><br><span class="line">        int f = 0;</span><br><span class="line">        while (f &lt; n) &#123;</span><br><span class="line">            if (nums[f] != val) &#123; //区别在这里</span><br><span class="line">                nums[s] = nums[f];</span><br><span class="line">                s++;</span><br><span class="line">            &#125;</span><br><span class="line">            f++;</span><br><span class="line">        &#125;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-26. 删除有序数组中的重复项</title>
      <link href="/undefined/51766.html"/>
      <url>/undefined/51766.html</url>
      
        <content type="html"><![CDATA[<h1 id="删除有序数组中的重复项"><a href="#删除有序数组中的重复项" class="headerlink" title="删除有序数组中的重复项"></a>删除有序数组中的重复项</h1><p>跟[上个题](<a href="https://gr4dyzhou.github.io/undefined/11422.html">leetcode-27. 移除元素 | Grady’s coding notes (gr4dyzhou.github.io)</a>)很像。同样是双指针解法</p><p>设置快慢指针f，s</p><p>初始时s&#x3D;0，f&#x3D;1。</p><ol><li><p>如果nums[s]不等于nums[f]说明不重复，f++，s++。</p></li><li><p>如果nums[s]等于nums[f]说明重复，f++。</p></li></ol><p>替换操作nums[++s]&#x3D;nums[f++]，可以合并到第1步。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeDuplicates(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        int s=0;</span><br><span class="line">        int n=nums.size();</span><br><span class="line">        for(int f=1;f&lt;n;f++)&#123;</span><br><span class="line">            if(nums[f]-nums[s])&#123;</span><br><span class="line">                nums[++s]=nums[f];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return s+1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="做完下一道题后重新写这道题"><a href="#做完下一道题后重新写这道题" class="headerlink" title="做完下一道题后重新写这道题"></a>做完下一道题后重新写这道题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeDuplicates(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        int n=nums.size();</span><br><span class="line">        if(n&lt;2) return n;</span><br><span class="line">        int s=1,f=1;</span><br><span class="line">        while(f&lt;n)&#123;</span><br><span class="line">            if(nums[f]-nums[s-1])&#123;</span><br><span class="line">                nums[s]=nums[f];</span><br><span class="line">                s++;</span><br><span class="line">            &#125;</span><br><span class="line">            f++;</span><br><span class="line">        &#125;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-27. 移除元素</title>
      <link href="/undefined/11422.html"/>
      <url>/undefined/11422.html</url>
      
        <content type="html"><![CDATA[<h1 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。</span><br><span class="line"></span><br><span class="line">不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。</span><br><span class="line"></span><br><span class="line">元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</span><br></pre></td></tr></table></figure><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><p>遍历数组，找到元素val。</p><p>val之后的元素全部左移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeElement(vector&lt;int&gt;&amp; nums, int val) &#123;</span><br><span class="line">        int n=nums.size();</span><br><span class="line">        int i=0;</span><br><span class="line">        while(i&lt;n)&#123;</span><br><span class="line">            if(nums[i]!=val) i++;</span><br><span class="line">            else&#123;</span><br><span class="line">                for(int j=i;j&lt;n-1;j++)</span><br><span class="line">                    nums[j]=nums[j+1];</span><br><span class="line">                n--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="方法2-双指针优化"><a href="#方法2-双指针优化" class="headerlink" title="方法2 双指针优化"></a>方法2 双指针优化</h2><p>设置快慢指针f，s。</p><p>初始时值均为0。</p><p>如果nums[f]和nums[s]均不等于val，f++，s++</p><p>如果nums[s]为val，则停住，f++</p><p>当nums[f]!&#x3D;val时，说明s与f之间的值只有val（可能一个可能多个）</p><p>此时执行替换操作。</p><p>替换完成后数组长度变为s</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int removeElement(vector&lt;int&gt;&amp; nums, int val) &#123;</span><br><span class="line">        int n=nums.size();</span><br><span class="line">        int s=0;</span><br><span class="line">        for(int f=0;f&lt;n;f++)&#123;</span><br><span class="line">            if(nums[f]-val)&#123;</span><br><span class="line">                nums[s++]=nums[f];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-88. 合并两个有序数组</title>
      <link href="/undefined/1.html"/>
      <url>/undefined/1.html</url>
      
        <content type="html"><![CDATA[<h1 id="合并两个有序数组"><a href="#合并两个有序数组" class="headerlink" title="合并两个有序数组"></a>合并两个有序数组</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。</span><br><span class="line"></span><br><span class="line">请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。</span><br><span class="line"></span><br><span class="line">注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。nums2 的长度为 n 。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="时空复杂度均为O-n-m"><a href="#时空复杂度均为O-n-m" class="headerlink" title="时空复杂度均为O(n+m)"></a>时空复杂度均为O(n+m)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    void merge(vector&lt;int&gt;&amp; nums1, int m, vector&lt;int&gt;&amp; nums2, int n) &#123;</span><br><span class="line">        int i=0,j=0;</span><br><span class="line">        vector&lt;int&gt; nums;</span><br><span class="line">        while(i&lt;m&amp;&amp;j&lt;n) &#123;</span><br><span class="line">            if(nums1[i]&lt;nums2[j])</span><br><span class="line">                nums.push_back(nums1[i]),i++;</span><br><span class="line">            else </span><br><span class="line">                nums.push_back(nums2[j]),j++;</span><br><span class="line">        &#125;</span><br><span class="line">        while(i&lt;m) nums.push_back(nums1[i]),i++;</span><br><span class="line">        while(j&lt;n) nums.push_back(nums2[j]),j++;</span><br><span class="line">        for(i=0;i&lt;m+n;i++)</span><br><span class="line">            nums1[i]=nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="优化空间复杂度"><a href="#优化空间复杂度" class="headerlink" title="优化空间复杂度"></a>优化空间复杂度</h2><p>注意到nums1的初始长度为m+n，设置p指针指向nums1最后一个位置。</p><p>倒序遍历nums1和nums2数组，将二者较大的值倒序放入nums1。</p><p>倒序可以保证原数组值不被覆盖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    void merge(vector&lt;int&gt;&amp; nums1, int m, vector&lt;int&gt;&amp; nums2, int n) &#123;</span><br><span class="line">        int p = m+n-1;</span><br><span class="line">        --m;</span><br><span class="line">        --n;</span><br><span class="line">        while(m&gt;-1&amp;&amp;n&gt;-1)&#123;</span><br><span class="line">            if(nums1[m]&gt;nums2[n]) nums1[p--]=nums1[m--];</span><br><span class="line">            else nums1[p--]=nums2[n--];</span><br><span class="line">        &#125;</span><br><span class="line">        while(m&gt;-1) nums1[p--]=nums1[m--];</span><br><span class="line">        while(n&gt;-1) nums1[p--]=nums2[n--];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/undefined/16107.html"/>
      <url>/undefined/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
